public net.minecraft.world.item.CreativeModeTabs BUILDING_BLOCKS # BUILDING_BLOCKS
public net.minecraft.world.item.CreativeModeTabs FUNCTIONAL_BLOCKS # FUNCTIONAL_BLOCKS
public net.minecraft.world.item.CreativeModeTabs REDSTONE_BLOCKS # REDSTONE_BLOCKS
public net.minecraft.world.item.CreativeModeTabs COMBAT # COMBAT
public net.minecraft.world.item.CreativeModeTabs SPAWN_EGGS # SPAWN_EGGS
public net.minecraft.world.item.CreativeModeTabs NATURAL_BLOCKS # NATURAL_BLOCKS
public net.minecraft.world.item.CreativeModeTabs COLORED_BLOCKS # COLORED_BLOCKS
public net.minecraft.world.item.CreativeModeTabs TOOLS_AND_UTILITIES # TOOLS_AND_UTILITIES
public net.minecraft.world.item.CreativeModeTabs FOOD_AND_DRINKS # FOOD_AND_DRINKS
public net.minecraft.world.item.CreativeModeTabs INGREDIENTS # INGREDIENTS
public net.minecraft.world.item.CreativeModeTabs OP_BLOCKS # OP_BLOCKS
public net.minecraft.client.resources.model.ModelManager bakedRegistry # bakedRegistry
public net.minecraft.world.entity.Entity removeAction(Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/Component; # removeAction
public net.minecraft.commands.synchronization.ArgumentTypeInfos BY_CLASS # BY_CLASS
public net.minecraft.client.gui.Gui$HeartType
public net.minecraft.client.renderer.texture.SimpleTexture getTextureImage(Lnet/minecraft/server/packs/resources/ResourceManager;)Lnet/minecraft/client/renderer/texture/SimpleTexture$TextureImage; # getTextureImage
public net.minecraft.client.renderer.texture.SimpleTexture$TextureImage
public net.minecraft.client.renderer.texture.PreloadedTexture getTextureImage(Lnet/minecraft/server/packs/resources/ResourceManager;)Lnet/minecraft/client/renderer/texture/SimpleTexture$TextureImage; # getTextureImage
public net.minecraft.client.gui.screens.LoadingOverlay$LogoTexture getTextureImage(Lnet/minecraft/server/packs/resources/ResourceManager;)Lnet/minecraft/client/renderer/texture/SimpleTexture$TextureImage; # getTextureImage
public net.minecraft.client.gui.screens.inventory.InventoryScreen xMouse # xMouse
public net.minecraft.client.gui.screens.inventory.InventoryScreen yMouse # yMouse
public-f net.minecraft.world.inventory.AbstractContainerMenu containerId # containerId
public-f net.minecraft.world.entity.player.Inventory items # items
public-f net.minecraft.world.entity.player.Inventory armor # armor
public-f net.minecraft.world.entity.player.Inventory offhand # offhand
public-f net.minecraft.world.entity.player.Inventory compartments # crafting
public net.minecraft.world.entity.npc.VillagerTrades DEFAULT_SUPPLY # DEFAULT_SUPPLY
public net.minecraft.world.entity.npc.VillagerTrades COMMON_ITEMS_SUPPLY # COMMON_ITEMS_SUPPLY
public net.minecraft.world.entity.npc.VillagerTrades UNCOMMON_ITEMS_SUPPLY # UNCOMMON_ITEMS_SUPPLY
public net.minecraft.world.entity.npc.VillagerTrades XP_LEVEL_1_SELL # XP_LEVEL_1_SELL
public net.minecraft.world.entity.npc.VillagerTrades XP_LEVEL_1_BUY # XP_LEVEL_1_BUY
public net.minecraft.world.entity.npc.VillagerTrades XP_LEVEL_2_SELL # XP_LEVEL_2_SELL
public net.minecraft.world.entity.npc.VillagerTrades XP_LEVEL_2_BUY # XP_LEVEL_2_BUY
public net.minecraft.world.entity.npc.VillagerTrades XP_LEVEL_3_SELL # XP_LEVEL_3_SELL
public net.minecraft.world.entity.npc.VillagerTrades XP_LEVEL_3_BUY # XP_LEVEL_3_BUY
public net.minecraft.world.entity.npc.VillagerTrades XP_LEVEL_4_SELL # XP_LEVEL_4_SELL
public net.minecraft.world.entity.npc.VillagerTrades XP_LEVEL_4_BUY # XP_LEVEL_4_BUY
public net.minecraft.world.entity.npc.VillagerTrades XP_LEVEL_5_TRADE # XP_LEVEL_5_TRADE
public net.minecraft.world.entity.npc.VillagerTrades$EmeraldForItems
public net.minecraft.world.entity.npc.VillagerTrades$ItemsForEmeralds
public net.minecraft.commands.arguments.ResourceKeyArgument resolveKey(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Lnet/minecraft/resources/ResourceKey;Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;)Lnet/minecraft/core/Holder$Reference;
protected net.minecraft.client.gui.screens.ChatScreen * # ChatScreen fields
protected net.minecraft.client.gui.screens.ChatScreen *() # ChatScreen methods
public net.minecraft.client.gui.screens.Screen createTabEvent()Lnet/minecraft/client/gui/navigation/FocusNavigationEvent$TabNavigation; # createTabEvent
public net.minecraft.client.gui.screens.Screen createArrowEvent(Lnet/minecraft/client/gui/navigation/ScreenDirection;)Lnet/minecraft/client/gui/navigation/FocusNavigationEvent$ArrowNavigation; # createArrowEvent
public net.minecraft.client.gui.components.ChatComponent allMessages # allMessages
public-f net.minecraft.world.level.storage.loot.LootPool entries # entries
public net.minecraft.client.renderer.GameRenderer postEffect # postEffect
public net.minecraft.world.item.CreativeModeTab$Builder type(Lnet/minecraft/world/item/CreativeModeTab$Type;)Lnet/minecraft/world/item/CreativeModeTab$Builder; # type
public net.minecraft.client.renderer.entity.FishingHookRenderer stringVertex(FFFLcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/blaze3d/vertex/PoseStack$Pose;FF)V # stringVertex